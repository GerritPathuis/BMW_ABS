/**
 * Created by yaniv on 7/20/15.
 */

window.gigyaAem = window.gigyaAem || {};
window.gigyaAem.functions = window.gigyaAem.functions || {};


window.gigyaAem.functions.isUserAccountActive = function (res) {
    var isZapped = false;
    var isBanned = false;
    var isStale = false;

    if(isZapped || isBanned || isStale) {
        $('.gigya-error-msg').append("Account is banned or zapped or stale");
        return;
    }

}

window.gigyaAem.functions.raasOnLoginCallback = function (res) {
    var currentUrl = window.location.href.split('?')[0],
        loginData = JSON.stringify(window.gigyaAem.functions.extractLoginData(res));
    // gigya.accounts.getAccountInfo({ callback: window.gigyaAem.functions.isUserAccountActive }); 
    
    jQuery.ajax("https://www.maximintegrated.com/bin/gigya/login/j_gigya_login",
        {
            data: {
                j_gigya_uid: res.UID,
                j_gigya_uid_sig: res.UIDSignature,
                j_gigya_sig_time: res.signatureTimestamp,
                j_gigya_apikey: window.__gigyaApiKey,
                j_gigya_conf_name: window.__gigyaConfName,
                j_validate: true
            },
            dataType: "text",
            type: "POST",
            async: false,
            global: false,
            success: function (data, code, jqXHR) {
                var resJson = JSON.parse(data);
                if (resJson.authenticated) {
					var requestParameters = parseQueryString(decodeURIComponent(location.search.substring(1)));
					var app = requestParameters.app;
					var model = requestParameters.model;
					var callback = requestParameters.callback;
					var currentDomain = window.location.host;
					if(typeof callback  == "undefined" || callback == "") {
						if(typeof requestParameters.resource  != "undefined" && requestParameters.resource != "") {
							callback = requestParameters.resource;
						} else if (document.referrer != "" && app == "legacy") {
							callback = document.referrer;
						}
					}
					if((typeof app != "undefined" && app == "crm") && (typeof model != "undefined" && model == "login") && (typeof callback != "undefined" && callback !="")){
						gigyaSamlResponse(callback);
					} else if(typeof callback != "undefined" && callback !="") {
								window.open(callback,"_self");
					}else {
						if (window.CQ_Analytics && CQ_Analytics.ProfileDataMgr) {
							CQ_Analytics.ProfileDataMgr.loadProfile(resJson.userid);
							CQ.shared.Util.reload();
						} else {
						//window.location.reload(true);
						}
					}
                }
            },
            error: function () {
                console.log("Error login in user");
                gigya.accounts.logout();
            }
        }
    )

}
window.gigyaAem.functions.extractLoginData = function (res) {
    var loginData = {};
    return loginData;
}

function parseQueryString(query) {
  var vars = query.split("&");
  var query_string = {};
  for (var i = 0; i < vars.length; i++) {
    var pair = vars[i].split("=");
    // If first entry with this name
    if (typeof query_string[pair[0]] === "undefined") {
      query_string[pair[0]] = decodeURIComponent(pair[1]);
      // If second entry with this name
    } else if (typeof query_string[pair[0]] === "string") {
      var arr = [query_string[pair[0]], decodeURIComponent(pair[1])];
      query_string[pair[0]] = arr;
      // If third or later entry with this name
    } else {
      query_string[pair[0]].push(decodeURIComponent(pair[1]));
    }
  }
  return query_string;
}

